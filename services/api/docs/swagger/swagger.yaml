components:
  examples: {}
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    {
      Currency:
        {
          properties:
            {
              updatedAt: { type: string, format: date-time },
              createdAt: { type: string, format: date-time },
              symbol: { type: string },
              name: { type: string },
              code: { type: string },
            },
          required: [updatedAt, createdAt, symbol, name, code],
          type: object,
          description: 'Model Currency',
        },
      Language:
        {
          properties:
            {
              updatedAt: { type: string, format: date-time },
              createdAt: { type: string, format: date-time },
              name: { type: string },
              code: { type: string },
            },
          required: [updatedAt, createdAt, name, code],
          type: object,
          description: 'Model Language',
        },
      Organization:
        {
          properties:
            {
              updatedAt: { type: string, format: date-time },
              createdAt: { type: string, format: date-time },
              name: { type: string },
              code: { type: string },
            },
          required: [updatedAt, createdAt, name, code],
          type: object,
          description: 'Model Organization',
        },
      Country:
        {
          properties:
            {
              updatedAt: { type: string, format: date-time },
              createdAt: { type: string, format: date-time },
              timezones: { items: { type: string }, type: array },
              googleMaps: { type: string },
              density: { type: number, format: double },
              population: { type: number, format: double },
              area: { type: number, format: double },
              flagSVG: { type: string },
              flagPNG: { type: string },
              flag: { type: string },
              subregion: { type: string },
              region: { type: string },
              borders: { items: { type: string }, type: array },
              continents: { items: { type: string }, type: array },
              alternativeSpellings: { items: { type: string }, type: array },
              capital: { items: { type: string }, type: array },
              topLevelDomains: { items: { type: string }, type: array },
              longitude: { type: number, format: double },
              latitude: { type: number, format: double },
              startOfWeek: { type: string },
              unMember: { type: boolean },
              independent: { type: boolean },
              status: { type: string },
              fifa: { type: string },
              cioc: { type: string },
              ccn3: { type: string },
              cca3: { type: string },
              cca2: { type: string },
              officialName: { type: string },
              commonName: { type: string },
              code: { type: string },
            },
          required:
            [
              updatedAt,
              createdAt,
              timezones,
              googleMaps,
              density,
              population,
              area,
              flagSVG,
              flagPNG,
              flag,
              subregion,
              region,
              borders,
              continents,
              alternativeSpellings,
              capital,
              topLevelDomains,
              longitude,
              latitude,
              startOfWeek,
              unMember,
              independent,
              status,
              fifa,
              cioc,
              ccn3,
              cca3,
              cca2,
              officialName,
              commonName,
              code,
            ],
          type: object,
          description: 'Model Country',
        },
      Coin:
        {
          properties:
            {
              btcPrice: { type: string },
              24hVolume: { type: string },
              coinrankingUrl: { type: string },
              lowVolume: { type: boolean },
              sparkline: { items: { type: string }, type: array },
              rank: { type: number, format: double },
              change: { type: string },
              tier: { type: number, format: double },
              listedAt: { type: number, format: double },
              price: { type: string },
              marketCap: { type: string },
              iconUrl: { type: string },
              color: { type: string },
              name: { type: string },
              symbol: { type: string },
              uuid: { type: string },
            },
          required:
            [
              btcPrice,
              24hVolume,
              coinrankingUrl,
              lowVolume,
              sparkline,
              rank,
              change,
              tier,
              listedAt,
              price,
              marketCap,
              iconUrl,
              color,
              name,
              symbol,
              uuid,
            ],
          type: object,
        },
      HealthResponse: { properties: { status: { type: string } }, required: [status], type: object },
      Article:
        {
          properties:
            {
              content: { type: string },
              publishedAt: { type: string },
              urlToImage: { type: string },
              url: { type: string },
              description: { type: string },
              title: { type: string },
              author: { type: string },
              source:
                { properties: { name: { type: string }, id: { type: string } }, required: [name, id], type: object },
            },
          required: [content, publishedAt, urlToImage, url, description, title, author, source],
          type: object,
        },
      NewsCountry:
        {
          type: string,
          enum:
            [
              ae,
              ar,
              at,
              au,
              be,
              bg,
              br,
              ca,
              ch,
              cn,
              co,
              cu,
              cz,
              de,
              eg,
              fr,
              gb,
              gr,
              hk,
              hu,
              id,
              ie,
              il,
              in,
              it,
              jp,
              kr,
              lt,
              lv,
              ma,
              mx,
              my,
              ng,
              nl,
              no,
              nz,
              ph,
              pl,
              pt,
              ro,
              rs,
              ru,
              sa,
              se,
              sg,
              si,
              sk,
              th,
              tr,
              tw,
              ua,
              us,
              ve,
              za,
            ],
        },
      NewsCategory: { type: string, enum: [business, entertainment, general, health, science, sports, technology] },
      NewsLanguage: { type: string, enum: [ar, de, en, es, fr, he, it, nl, no, pt, ru, sv, ud, zh] },
      Source:
        {
          properties:
            {
              country: { $ref: '#/components/schemas/NewsCountry' },
              language: { $ref: '#/components/schemas/NewsLanguage' },
              category: { $ref: '#/components/schemas/NewsCategory' },
              url: { type: string },
              description: { type: string },
              name: { type: string },
              id: { type: string },
            },
          required: [country, language, category, url, description, name, id],
          type: object,
        },
      Passport:
        {
          properties:
            {
              mobilityScore: { type: number, format: double },
              individualRank: { type: number, format: double },
              globalRank: { type: number, format: double },
              countryCode: { type: string },
            },
          required: [mobilityScore, individualRank, globalRank, countryCode],
          type: object,
          description: 'Model Passport',
        },
      PassportRequirement:
        {
          properties: { requirement: { type: string }, countryCode: { type: string }, passportCode: { type: string } },
          required: [requirement, countryCode, passportCode],
          type: object,
          description: 'Model PassportRequirement',
        },
      Timezone:
        {
          properties:
            {
              updatedAt: { type: string, format: date-time },
              createdAt: { type: string, format: date-time },
              utcOffset: { type: string },
              offset: { type: string },
              name: { type: string },
              code: { type: string },
            },
          required: [updatedAt, createdAt, utcOffset, offset, name, code],
          type: object,
          description: 'Model Timezone',
        },
    }
  securitySchemes: {}
info:
  title: '@world/api'
  version: 0.0.1
  description: 'World API'
  license: { name: 'GNU GPL V3.0' }
  contact: { name: 'hieudoanm ', email: hieumdoan@gmail.com }
openapi: 3.0.0
paths:
  /countries:
    {
      get:
        {
          operationId: GetCountries,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              items:
                                {
                                  properties:
                                    {
                                      updatedAt: { type: string, format: date-time },
                                      createdAt: { type: string, format: date-time },
                                      timezones: { items: { type: string }, type: array },
                                      googleMaps: { type: string },
                                      density: { type: number, format: double },
                                      population: { type: number, format: double },
                                      area: { type: number, format: double },
                                      flagSVG: { type: string },
                                      flagPNG: { type: string },
                                      flag: { type: string },
                                      subregion: { type: string },
                                      region: { type: string },
                                      borders: { items: { type: string }, type: array },
                                      continents: { items: { type: string }, type: array },
                                      alternativeSpellings: { items: { type: string }, type: array },
                                      capital: { items: { type: string }, type: array },
                                      topLevelDomains: { items: { type: string }, type: array },
                                      longitude: { type: number, format: double },
                                      latitude: { type: number, format: double },
                                      startOfWeek: { type: string },
                                      unMember: { type: boolean },
                                      independent: { type: boolean },
                                      status: { type: string },
                                      fifa: { type: string },
                                      cioc: { type: string },
                                      ccn3: { type: string },
                                      cca3: { type: string },
                                      cca2: { type: string },
                                      officialName: { type: string },
                                      commonName: { type: string },
                                      code: { type: string },
                                      googleTrends: { items: { type: string }, type: array },
                                      organizations:
                                        { items: { $ref: '#/components/schemas/Organization' }, type: array },
                                      languages: { items: { $ref: '#/components/schemas/Language' }, type: array },
                                      currencies: { items: { $ref: '#/components/schemas/Currency' }, type: array },
                                    },
                                  required:
                                    [
                                      updatedAt,
                                      createdAt,
                                      timezones,
                                      googleMaps,
                                      density,
                                      population,
                                      area,
                                      flagSVG,
                                      flagPNG,
                                      flag,
                                      subregion,
                                      region,
                                      borders,
                                      continents,
                                      alternativeSpellings,
                                      capital,
                                      topLevelDomains,
                                      longitude,
                                      latitude,
                                      startOfWeek,
                                      unMember,
                                      independent,
                                      status,
                                      fifa,
                                      cioc,
                                      ccn3,
                                      cca3,
                                      cca2,
                                      officialName,
                                      commonName,
                                      code,
                                      googleTrends,
                                      organizations,
                                      languages,
                                      currencies,
                                    ],
                                  type: object,
                                },
                              type: array,
                            },
                        },
                    },
                },
            },
          tags: [Countries],
          security: [],
          parameters: [],
        },
    }
  '/countries/{code}':
    {
      get:
        {
          operationId: GetCountry,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content: { application/json: { schema: { $ref: '#/components/schemas/Country' } } },
                },
            },
          tags: [Countries],
          security: [],
          parameters: [{ in: path, name: code, required: true, schema: { type: string } }],
        },
    }
  /crypto/coins:
    {
      get:
        {
          operationId: GetCoins,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    { application/json: { schema: { items: { $ref: '#/components/schemas/Coin' }, type: array } } },
                },
            },
          tags: [Crypto],
          security: [],
          parameters: [],
        },
    }
  '/crypto/coins/{id}':
    {
      get:
        {
          operationId: GetCoin,
          responses:
            {
              '200':
                { description: Ok, content: { application/json: { schema: { $ref: '#/components/schemas/Coin' } } } },
            },
          tags: [Crypto],
          security: [],
          parameters: [{ in: path, name: id, required: true, schema: { type: string } }],
        },
    }
  /currencies:
    {
      get:
        {
          operationId: GetCurrencies,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    { application/json: { schema: { items: { $ref: '#/components/schemas/Currency' }, type: array } } },
                },
            },
          tags: [Currencies],
          security: [],
          parameters: [],
        },
    }
  '/currencies/{code}':
    {
      get:
        {
          operationId: GetCurrency,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content: { application/json: { schema: { $ref: '#/components/schemas/Currency' } } },
                },
            },
          tags: [Currencies],
          security: [],
          parameters: [{ in: path, name: code, required: true, schema: { type: string } }],
        },
    }
  /health:
    {
      get:
        {
          operationId: GetHealth,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content: { application/json: { schema: { $ref: '#/components/schemas/HealthResponse' } } },
                },
            },
          tags: [Health],
          security: [],
          parameters: [],
        },
    }
  /languages:
    {
      get:
        {
          operationId: GetLanguages,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    { application/json: { schema: { items: { $ref: '#/components/schemas/Language' }, type: array } } },
                },
            },
          tags: [Languages],
          security: [],
          parameters: [],
        },
    }
  '/languages/{code}':
    {
      get:
        {
          operationId: GetLanguage,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content: { application/json: { schema: { $ref: '#/components/schemas/Language' } } },
                },
            },
          tags: [Languages],
          security: [],
          parameters: [{ in: path, name: code, required: true, schema: { type: string } }],
        },
    }
  /news/headlines:
    {
      get:
        {
          operationId: GetHeadlines,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    { application/json: { schema: { items: { $ref: '#/components/schemas/Article' }, type: array } } },
                },
            },
          tags: [News],
          security: [],
          parameters:
            [
              { in: query, name: country, required: false, schema: { $ref: '#/components/schemas/NewsCountry' } },
              { in: query, name: category, required: false, schema: { $ref: '#/components/schemas/NewsCategory' } },
              { in: query, name: sources, required: false, schema: { default: '', type: string } },
              { in: query, name: q, required: false, schema: { default: '', type: string } },
            ],
        },
    }
  /news/sources:
    {
      get:
        {
          operationId: GetSources,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    { application/json: { schema: { items: { $ref: '#/components/schemas/Source' }, type: array } } },
                },
            },
          tags: [News],
          security: [],
          parameters:
            [
              { in: query, name: category, required: false, schema: { $ref: '#/components/schemas/NewsCategory' } },
              { in: query, name: language, required: false, schema: { $ref: '#/components/schemas/NewsLanguage' } },
              { in: query, name: country, required: false, schema: { $ref: '#/components/schemas/NewsCountry' } },
            ],
        },
    }
  /organizations:
    {
      get:
        {
          operationId: GetOrganizations,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    {
                      application/json:
                        { schema: { items: { $ref: '#/components/schemas/Organization' }, type: array } },
                    },
                },
            },
          tags: [Organizations],
          security: [],
          parameters: [],
        },
    }
  '/organizations/{code}':
    {
      get:
        {
          operationId: GetOrganization,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content: { application/json: { schema: { $ref: '#/components/schemas/Organization' } } },
                },
            },
          tags: [Organizations],
          security: [],
          parameters: [{ in: path, name: code, required: true, schema: { type: string } }],
        },
    }
  /passports:
    {
      get:
        {
          operationId: GetPassports,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    { application/json: { schema: { items: { $ref: '#/components/schemas/Passport' }, type: array } } },
                },
            },
          tags: [Passports],
          security: [],
          parameters: [],
        },
    }
  '/passports/{code}':
    {
      get:
        {
          operationId: GetPassport,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    {
                      application/json:
                        { schema: { items: { $ref: '#/components/schemas/PassportRequirement' }, type: array } },
                    },
                },
            },
          tags: [Passports],
          security: [],
          parameters: [{ in: path, name: code, required: true, schema: { type: string } }],
        },
    }
  /timezones:
    {
      get:
        {
          operationId: GetTimezones,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content:
                    { application/json: { schema: { items: { $ref: '#/components/schemas/Timezone' }, type: array } } },
                },
            },
          tags: [Timezones],
          security: [],
          parameters: [],
        },
    }
  '/timezones/{code}':
    {
      get:
        {
          operationId: GetTimezone,
          responses:
            {
              '200':
                {
                  description: Ok,
                  content: { application/json: { schema: { $ref: '#/components/schemas/Timezone' } } },
                },
            },
          tags: [Timezones],
          security: [],
          parameters: [{ in: path, name: code, required: true, schema: { type: string } }],
        },
    }
servers:
  - { url: 'http://localhost:8080', description: Local }
